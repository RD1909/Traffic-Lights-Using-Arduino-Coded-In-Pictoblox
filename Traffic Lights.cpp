//AI created code by PictoBlox
//This c++ code is generated by PictoBlox

//Gloabl Variables are declared here
float time;

//User Defined Functions
void green1_n(double status) {
	if((status == 1)) {
		digitalWrite(5, true);
	}
	else {
		digitalWrite(5, false);
	}
}
void green2_n(double status) {
	if((status == 1)) {
		digitalWrite(8, true);
	}
	else {
		digitalWrite(8, false);
	}
}
void green3_n(double status) {
	if((status == 1)) {
		digitalWrite(11, true);
	}
	else {
		digitalWrite(11, false);
	}
}
void red1_n(double status) {
	if((status == 1)) {
		digitalWrite(7, true);
	}
	else {
		digitalWrite(7, false);
	}
}
void red2_n(double status) {
	if((status == 1)) {
		digitalWrite(10, true);
	}
	else {
		digitalWrite(10, false);
	}
}
void red3_n(double status) {
	if((status == 1)) {
		digitalWrite(13, true);
	}
	else {
		digitalWrite(13, false);
	}
}
void yellow1_n(double status) {
	if((status == 1)) {
		digitalWrite(6, true);
	}
	else {
		digitalWrite(6, false);
	}
}
void yellow2_n(double status) {
	if((status == 1)) {
		digitalWrite(9, true);
	}
	else {
		digitalWrite(9, false);
	}
}
void yellow3_n(double status) {
	if((status == 1)) {
		digitalWrite(12, true);
	}
	else {
		digitalWrite(12, false);
	}
}

void setup() {
	//put your setup code here, to run once:
	pinMode(5, OUTPUT);
	pinMode(8, OUTPUT);
	pinMode(11, OUTPUT);
	pinMode(7, OUTPUT);
	pinMode(10, OUTPUT);
	pinMode(13, OUTPUT);
	pinMode(6, OUTPUT);
	pinMode(9, OUTPUT);
	pinMode(12, OUTPUT);
	
	
	time = 2;
}

void loop() {
	//put your main code here, to run repeatedly:
	
	
	green1_n(1);
	green2_n(0);
	green3_n(0);
	red1_n(0);
	red2_n(1);
	red3_n(1);
	yellow1_n(0);
	yellow2_n(0);
	yellow3_n(0);
	delay(time * 1000);
	green1_n(0);
	green2_n(0);
	green3_n(0);
	red1_n(0);
	red2_n(1);
	red3_n(1);
	yellow1_n(1);
	yellow2_n(0);
	yellow3_n(0);
	delay(time * 1000);
	green1_n(0);
	green2_n(1);
	green3_n(0);
	red1_n(1);
	red2_n(0);
	red3_n(1);
	yellow1_n(0);
	yellow2_n(0);
	yellow3_n(0);
	delay(time * 1000);
	green1_n(0);
	green2_n(0);
	green3_n(0);
	red1_n(1);
	red2_n(0);
	red3_n(1);
	yellow1_n(0);
	yellow2_n(1);
	yellow3_n(0);
	delay(time * 1000);
	green1_n(0);
	green2_n(0);
	green3_n(1);
	red1_n(1);
	red2_n(1);
	red3_n(0);
	yellow1_n(0);
	yellow2_n(0);
	yellow3_n(0);
	delay(time * 1000);
	green1_n(0);
	green2_n(0);
	green3_n(0);
	red1_n(1);
	red2_n(1);
	red3_n(0);
	yellow1_n(0);
	yellow2_n(0);
	yellow3_n(1);
	delay(time * 1000);
}
